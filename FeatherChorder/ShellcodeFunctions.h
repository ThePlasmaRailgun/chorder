// The mapping of ASCII to USB HID codes
// Used for entering the shellcode
// When the METERPRETER macro is activated
// Also allows you to do other macros which enter
// Long strings of text

typedef uint8_t keymap_t;

const char asciicodemappings[] = {
  " "     //       (0x00,0x2c)
  "!"     //       (0x02,0x1e)
  "\""    //       (0x02,0x34)
  "#"     //       (0x02,0x20)
  "$"     //       (0x02,0x21)
  "%"     //       (0x02,0x22)
  "&"     //       (0x02,0x24)
  "\""    //       (0x00,0x34)
  "("     //       (0x02,0x26)
  ")"     //       (0x02,0x27)
  "*"     //       (0x02,0x25)
  "+"     //       (0x02,0x2e)
  ","     //       (0x00,0x36)
  "-"     //       (0x00,0x2d)
  "."     //       (0x00,0x37)
  "/"     //       (0x00,0x38)
  "0"     //       (0x00,0x27)
  "1"     //       (0x00,0x1e)
  "2"     //       (0x00,0x1f)
  "3"     //       (0x00,0x20)
  "4"     //       (0x00,0x21)
  "5"     //       (0x00,0x22)
  "6"     //       (0x00,0x23)
  "7"     //       (0x00,0x24)
  "8"     //       (0x00,0x25)
  "9"     //       (0x00,0x26)
  ":"     //       (0x02,0x33)
  ";"     //       (0x00,0x33)
  "<"     //       (0x02,0x36)
  "="     //       (0x00,0x2e)
  ">"     //       (0x02,0x37)
  "?"     //       (0x02,0x38)
  "@"     //       (0x02,0x1f)
  "A"     //       (0x02,0x04)
  "B"     //       (0x02,0x05)
  "C"     //       (0x02,0x06)
  "D"     //       (0x02,0x07)
  "E"     //       (0x02,0x08)
  "F"     //       (0x02,0x09)
  "G"     //       (0x02,0x0a)
  "H"     //       (0x02,0x0b)
  "I"     //       (0x02,0x0c)
  "J"     //       (0x02,0x0d)
  "K"     //       (0x02,0x0e)
  "L"     //       (0x02,0x0f)
  "M"     //       (0x02,0x10)
  "N"     //       (0x02,0x11)
  "O"     //       (0x02,0x12)
  "P"     //       (0x02,0x13)
  "Q"     //       (0x02,0x14)
  "R"     //       (0x02,0x15)
  "S"     //       (0x02,0x16)
  "T"     //       (0x02,0x17)
  "U"     //       (0x02,0x18)
  "V"     //       (0x02,0x19)
  "W"     //       (0x02,0x1a)
  "X"     //       (0x02,0x1b)
  "Y"     //       (0x02,0x1c)
  "Z"     //       (0x02,0x1d)
  "["     //       (0x00,0x2f) 
  "\\"    //       (0x00,0x31)
  "]"     //       (0x00,0x30)
  "^"     //       (0x02,0x23)
  "_"     //       (0x02,0x2d)
  "`"     //       (0x00,0x35)
  "a"     //       (0x00,0x04)
  "b"     //       (0x00,0x05)
  "c"     //       (0x00,0x06)
  "d"     //       (0x00,0x07)
  "e"     //       (0x00,0x08)
  "f"     //       (0x00,0x09)
  "g"     //       (0x00,0x0a)
  "h"     //       (0x00,0x0b)
  "i"     //       (0x00,0x0c)
  "j"     //       (0x00,0x0d)
  "k"     //       (0x00,0x0e)
  "l"     //       (0x00,0x0f)
  "m"     //       (0x00,0x10)
  "n"     //       (0x00,0x11)
  "o"     //       (0x00,0x12)
  "p"     //       (0x00,0x13)
  "q"     //       (0x00,0x14)
  "r"     //       (0x00,0x15)
  "s"     //       (0x00,0x16)
  "t"     //       (0x00,0x17)
  "u"     //       (0x00,0x18)
  "v"     //       (0x00,0x19)
  "w"     //       (0x00,0x1a)
  "x"     //       (0x00,0x1b)
  "y"     //       (0x00,0x1c)
  "z"     //       (0x00,0x1d)
  "{"     //       (0x02,0x2f)
  "|"     //       (0x02,0x31)
  "}"     //       (0x02,0x30)
  "~"     //       (0x02,0x35)
};

// The modifier keys
// Each index "maps" to the actual ASCII table above.
// The entire thing uses only the 0x00 (no modifiers) and ox02 (left shift pressed only)
const keymap_t asciimodifiermappings[] = {
  0x00,
  0x02,
  0x02,
  0x02,
  0x02,
  0x02,
  0x02,
  0x00,
  0x02,
  0x02,
  0x02,
  0x02,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x02,
  0x00,
  0x02,
  0x00,
  0x02,
  0x02,
  0x02,
  0x02,
  0x02,
  0x02,
  0x02,
  0x02,
  0x02,
  0x02,
  0x02,
  0x02,
  0x02,
  0x02,
  0x02,
  0x02,
  0x02,
  0x02,
  0x02,
  0x02,
  0x02,
  0x02,
  0x02,
  0x02,
  0x02,
  0x02,
  0x02,
  0x02,
  0x02,
  0x00,
  0x00,
  0x00,
  0x02,
  0x02,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x02,
  0x02,
  0x02,
  0x02 
};


// The actual key codes. 
// As above, each key code "maps" to the modifier key and ASCII value at the same index.
// Unlike the above, this uses many different values. 

const keymap_t asciikeycodemaps[] = {
  0x2c,
  0x1e,
  0x34,
  0x20,
  0x21,
  0x22,
  0x24,
  0x34,
  0x26,
  0x27,
  0x25,
  0x2e,
  0x36,
  0x2d,
  0x37,
  0x38,
  0x27,
  0x1e,
  0x1f,
  0x20,
  0x21,
  0x22,
  0x23,
  0x24,
  0x25,
  0x26,
  0x33,
  0x33,
  0x36,
  0x2e,
  0x37,
  0x38,
  0x1f,
  0x04,
  0x05,
  0x06,
  0x07,
  0x08,
  0x09,
  0x0a,
  0x0b,
  0x0c,
  0x0d,
  0x0e,
  0x0f,
  0x10,
  0x11,
  0x12,
  0x13,
  0x14,
  0x15,
  0x16,
  0x17,
  0x18,
  0x19,
  0x1a,
  0x1b,
  0x1c,
  0x1d,
  0x2f,
  0x31,
  0x30,
  0x23,
  0x2d,
  0x35,
  0x04,
  0x05,
  0x06,
  0x07,
  0x08,
  0x09,
  0x0a,
  0x0b,
  0x0c,
  0x0d,
  0x0e,
  0x0f,
  0x10,
  0x11,
  0x12,
  0x13,
  0x14,
  0x15,
  0x16,
  0x17,
  0x18,
  0x19,
  0x1a,
  0x1b,
  0x1c,
  0x1d,
  0x2f,
  0x31,
  0x30,
  0x35
};
